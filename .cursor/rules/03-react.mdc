---
description: React 컴포넌트 작성 및 상태 관리에 관한 규칙
globs: 
alwaysApply: false
---

# React 사용 규칙

## 컴포넌트 구조

- 함수형 컴포넌트를 사용하세요.
- 컴포넌트는 단일 책임 원칙을 따르도록 설계하세요.
- 큰 컴포넌트는 더 작은 하위 컴포넌트로 분리하세요.
- 컴포넌트 파일 내에서 관련 헬퍼 함수와 타입을 함께 정의하세요.

## 상태 관리

- 상태는 필요한 최소한의 범위에서만 관리하세요.
- 복잡한 상태 로직은 useReducer를 사용하세요.
- 컨텍스트(Context)는 전역 상태나 테마와 같은 공유 데이터에만 사용하세요.
- 불필요한 리렌더링을 방지하기 위해 메모이제이션(useMemo, useCallback)을 적절히 사용하세요.

## 성능 최적화

- 큰 목록에는 가상화(virtualization)를 사용하세요.
- 비용이 많이 드는 계산은 useMemo로 캐시하세요.
- 이벤트 핸들러는 useCallback으로 메모이제이션하세요.
- React.memo를 사용하여 불필요한 리렌더링을 방지하세요.

## 훅(Hooks) 사용

- 커스텀 훅을 만들어 로직을 재사용하세요.
- 훅 규칙을 엄격히 따르세요 (조건부로 호출하지 않기, 함수 컴포넌트 내에서만 호출하기 등).
- 부수 효과는 useEffect에서 관리하고, 의존성 배열을 정확히 지정하세요. 