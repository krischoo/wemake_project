---
description: TypeScript 코드 작성 및 타입 시스템 활용에 관한 규칙
globs: 
alwaysApply: false
---

# TypeScript 사용 규칙

## 기본 원칙

- 모든 코드에 TypeScript를 사용하세요.
- 타입보다 인터페이스를 선호하세요.
- enum 대신 맵(map)을 사용하세요.
- TypeScript 인터페이스를 사용한 함수형 컴포넌트를 작성하세요.

## 타입 정의

- 컴포넌트 props에 명확한 인터페이스를 정의하세요.
- 함수 매개변수와 반환 값에 적절한 타입 주석을 사용하세요.
- 필요에 따라 TypeScript의 유틸리티 타입을 활용하세요 (Partial, Pick, Omit 등).
- 'any' 타입 사용을 피하고, 타입이 정말 알 수 없을 때는 'unknown'을 사용하세요.

## 타입 안전성

- 타입 단언(type assertion)보다 타입 가드(type guard)를 선호하세요.
- 제네릭을 적절히 활용하여 재사용 가능한 타입을 만드세요.
- 복잡한 타입은 더 작은 인터페이스로 분해하여 조합하세요. 